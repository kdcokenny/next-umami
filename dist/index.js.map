{"version":3,"sources":["../index.ts","../src/useUmami.ts","../src/withUmamiProxy.ts","../src/UmamiProvider.tsx"],"sourcesContent":["import useUmami from './src/useUmami'\nimport withUmamiProxy from './src/withUmamiProxy'\nimport UmamiProvider from './src/UmamiProvider'\n\nexport { useUmami, withUmamiProxy }\nexport default UmamiProvider\n","'use client'\nimport { useCallback, useEffect, useState } from 'react'\n\ninterface PageView {\n  // Hostname of server\n  hostname: string\n  // Browser language\n  language: string\n  // Page referrer\n  referrer: string\n  // Screen dimensions (eg. 1920x1080)\n  screen: string\n  // Page title\n  title: string\n  // Page url\n  url: string\n  // Website ID (required)\n  website: string\n}\n\ntype EventName = string\ntype EventData = Record<string, string | number>\n\ninterface QueuedEvent {\n  type: 'pageView' | 'event'\n  payload: {\n    name?: EventName\n    data?: Partial<PageView> | EventData\n  }\n  timestamp: number\n}\n\n// https://umami.is/docs/tracker-functions\nexport default function useUmami() {\n  const [isClient, setIsClient] = useState(false)\n  const [eventQueue, setEventQueue] = useState<QueuedEvent[]>([])\n\n  useEffect(() => {\n    setIsClient(true) // this will be set to true only in the client\n  }, [])\n\n  const isUmamiAvailable = useCallback(() => {\n    return isClient && typeof (window as any).umami !== 'undefined'\n  }, [isClient])\n\n  useEffect(() => {\n    if (!isClient) return\n\n    const processQueue = () => {\n      if (!isUmamiAvailable()) return\n\n      while (eventQueue.length > 0) {\n        const event = eventQueue[0]\n        if (event.type === 'pageView') {\n          ;(window as any).umami?.track(event.payload.data)\n        } else {\n          ;(window as any).umami?.track(\n            event.payload.name as string,\n            event.payload.data\n          )\n        }\n        setEventQueue((queue) => queue.slice(1))\n      }\n    }\n\n    const intervalId = setInterval(() => {\n      if (isUmamiAvailable()) {\n        processQueue()\n        if (eventQueue.length === 0) {\n          clearInterval(intervalId)\n        }\n      }\n    }, 1000)\n\n    return () => clearInterval(intervalId)\n  }, [isClient, isUmamiAvailable, eventQueue])\n\n  const pageView = useCallback(\n    (data?: Partial<PageView>) => {\n      const fullData = {\n        ...(data || {}),\n      }\n\n      if (!isUmamiAvailable()) {\n        console.warn('UmamiProvider not found, queueing pageView')\n        setEventQueue((queue) => [\n          ...queue,\n          {\n            type: 'pageView',\n            payload: { data: fullData },\n            timestamp: Date.now(),\n          },\n        ])\n        return fullData\n      }\n\n      ;(window as any).umami?.track(fullData)\n      return fullData\n    },\n    [isUmamiAvailable]\n  )\n\n  const event = useCallback(\n    (name: EventName, data?: EventData) => {\n      if (!isUmamiAvailable()) {\n        console.warn('UmamiProvider not found, queueing event')\n        setEventQueue((queue) => [\n          ...queue,\n          {\n            type: 'event',\n            payload: { name, data },\n            timestamp: Date.now(),\n          },\n        ])\n        return { name, data }\n      }\n\n      ;(window as any).umami?.track(name, { ...(data && { ...data }) })\n      return { name, data: { ...(data && { ...data }) } }\n    },\n    [isUmamiAvailable]\n  )\n\n  return { pageView, event }\n}\n","import type { NextConfig } from 'next'\nimport type { NextUmamiProxyOptions } from './common'\nimport type { Rewrite } from 'next/dist/lib/load-custom-routes'\n\ntype NextUmamiEnv = { next_umami_proxy: 'true' } & {\n  [K in keyof Required<NextUmamiProxyOptions> as `next_umami_${K}`]:\n    | string\n    | undefined\n}\n\nexport default function withUmamiProxy(\n  options: NextUmamiProxyOptions = {}\n): NextConfig {\n  return (nextConfig: NextConfig): NextConfig => {\n    const nextUmamiEnv: NextUmamiEnv = {\n      next_umami_proxy: 'true',\n      next_umami_clientScriptPath: options.clientScriptPath ?? '/script.js',\n      next_umami_serverScriptDestination:\n        options.serverScriptDestination ?? 'https://cloud.umami.is/script.js',\n      next_umami_clientApiPath: options.clientApiPath ?? '/',\n      next_umami_serverApiDestination:\n        options.serverApiDestination ??\n        'https://api-gateway.umami.dev/api/send',\n    }\n\n    return {\n      ...nextConfig,\n      env: {\n        ...nextConfig.env,\n        ...(Object.fromEntries(\n          Object.entries(nextUmamiEnv).filter(\n            ([_, value]) => value !== undefined\n          )\n        ) as Record<string, string>),\n      },\n      rewrites: async () => {\n        const umamiRewrites = [\n          {\n            source: nextUmamiEnv.next_umami_clientScriptPath,\n            destination: nextUmamiEnv.next_umami_serverScriptDestination,\n          },\n          {\n            source: `${nextUmamiEnv.next_umami_clientApiPath?.replace(/\\/$/, '')}/api/send`,\n            destination: nextUmamiEnv.next_umami_serverApiDestination,\n            headers: {},\n          },\n        ] as const as Rewrite[]\n\n        if (process.env.NEXT_UMAMI_DEBUG) {\n          console.log('umamiRewrites = ', umamiRewrites)\n        }\n\n        const rewrites = await nextConfig.rewrites?.()\n\n        if (!rewrites) {\n          return umamiRewrites\n        } else if (Array.isArray(rewrites)) {\n          return rewrites.concat(umamiRewrites)\n        } else if (rewrites.afterFiles) {\n          rewrites.afterFiles = rewrites.afterFiles.concat(umamiRewrites)\n          return rewrites\n        } else {\n          rewrites.afterFiles = umamiRewrites\n          return rewrites\n        }\n      },\n    }\n  }\n}\n","import Script from 'next/script'\nimport React from 'react'\nimport type { NextUmamiProxyOptions, UmamiProps } from './common'\ntype RequiredKeys<T> = {\n  [K in keyof Required<T>]-?: T[K] | undefined\n}\n\nexport default function UmamiProvider({\n  src = 'https://cloud.umami.is/script.js',\n  websiteId,\n  autoTrack = true,\n  hostUrl,\n  domains,\n  children,\n  ...props\n}: UmamiProps) {\n  const proxyOptions: RequiredKeys<NextUmamiProxyOptions> | undefined = process\n    .env.next_umami_proxy\n    ? {\n        clientScriptPath: process.env.next_umami_clientScriptPath,\n        serverScriptDestination: process.env.next_umami_serverScriptDestination,\n        clientApiPath: process.env.next_umami_clientApiPath,\n        serverApiDestination: process.env.next_umami_serverApiDestination,\n      }\n    : undefined\n\n  const effectiveHostUrl = proxyOptions?.clientApiPath || hostUrl\n\n  return (\n    <>\n      <Script\n        src={proxyOptions?.clientScriptPath ?? src}\n        data-website-id={websiteId}\n        data-auto-track={autoTrack}\n        {...(effectiveHostUrl && { 'data-host-url': effectiveHostUrl })}\n        {...(domains && {\n          'data-domains': Array.isArray(domains) ? domains.join(',') : domains,\n        })}\n        /* Strategy recommended by Next.js for analytics https://nextjs.org/docs/app/api-reference/components/script#afterinteractive */\n        strategy=\"afterInteractive\"\n        {...props}\n      />\n      {children}\n    </>\n  )\n}\n"],"mappings":"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","names":["event","_a","_b","import_react","_a","React","Script"]}